{"ast":null,"code":"// API Response Types\n\n// Doctor and Specialty Types\n\n// Data for creating a new doctor\n\n// API Client Error Types\nexport class ApiError extends Error {\n  constructor(message, status, response) {\n    super(message);\n    this.status = status;\n    this.response = response;\n    this.name = 'ApiError';\n  }\n}\n\n// Appointment Booking Types\n\n// Complete Appointment interface for appointment lists\n\n// Appointment list API response\n\n// Cancellation request payload\n\n// API Configuration\nexport const API_BASE_URL = process.env.REACT_APP_API_BASE_URL || 'http://localhost:8080/api/v1';","map":{"version":3,"names":["ApiError","Error","constructor","message","status","response","name","API_BASE_URL","process","env","REACT_APP_API_BASE_URL"],"sources":["C:/Users/HP/Smart-Doctor-Booking-Reminder-App/frontend/src/api/types/api.ts"],"sourcesContent":["// API Response Types\nexport interface ApiResponse<T> {\n  message: string;\n  data: T;\n}\n\nexport interface ErrorResponse {\n  error: string;\n  message: string;\n}\n\n// Doctor and Specialty Types\nexport interface Specialty {\n  id: number;\n  name: string;\n  description: string;\n  is_active: boolean;\n  created_at: string;\n  updated_at: string;\n}\n\nexport interface Doctor {\n  id: number;\n  name: string;\n  specialty_id: number;\n  email?: string;\n  phone?: string;\n  license_number?: string;\n  years_of_experience?: number;\n  consultation_fee?: number;\n  bio?: string;\n  profile_image_url?: string;\n  is_active: boolean;\n  created_at: string;\n  updated_at: string;\n  deleted_at?: string;\n  specialty?: Specialty;\n  appointments?: Appointment[];\n}\n\n// Data for creating a new doctor\nexport interface DoctorData {\n  name: string;\n  specialty_id: number;\n  is_active?: boolean; // Optional, defaults to true\n}\n\n// API Client Error Types\nexport class ApiError extends Error {\n  constructor(\n    message: string,\n    public status: number,\n    public response?: ErrorResponse\n  ) {\n    super(message);\n    this.name = 'ApiError';\n  }\n}\n\n// Appointment Booking Types\nexport interface BookingData {\n  doctor_id: number;\n  appointment_time: string; // ISO 8601 format\n  duration: number; // Duration in minutes (15-180)\n  appointment_type?: 'CONSULTATION' | 'FOLLOW_UP' | 'EMERGENCY' | 'ROUTINE';\n  notes?: string;\n  reminder_type?: 'EMAIL' | 'SMS' | 'PUSH' | 'NONE';\n  reminder_time?: number; // Minutes before appointment (5-1440)\n}\n\nexport interface BookingResponse {\n  appointment_id: number;\n  doctor_id: number;\n  patient_id: number;\n  appointment_time: string;\n  status: string;\n  notes?: string;\n  created_at: string;\n  message: string;\n}\n\nexport interface AppointmentStatus {\n  id: number;\n  status: 'scheduled' | 'confirmed' | 'cancelled' | 'completed';\n  appointment_time: string;\n  doctor_name?: string;\n  patient_name?: string;\n}\n\n// Complete Appointment interface for appointment lists\nexport interface Appointment {\n  id: number;\n  user_id: number;\n  doctor_id: number;\n  appointment_time: string;\n  duration: number;\n  status: 'SCHEDULED' | 'CONFIRMED' | 'CANCELLED' | 'COMPLETED';\n  appointment_type: 'CONSULTATION' | 'FOLLOW_UP' | 'EMERGENCY' | 'ROUTINE';\n  patient_notes?: string;\n  doctor_notes?: string;\n  is_recurring: boolean;\n  recurring_pattern?: string;\n  reminder_type: 'EMAIL' | 'SMS' | 'PUSH' | 'NONE';\n  reminder_time: number;\n  reminder_sent: boolean;\n  reminder_sent_at?: string;\n  cancellation_reason?: string;\n  cancelled_at?: string;\n  cancelled_by?: number;\n  created_at: string;\n  updated_at: string;\n  deleted_at?: string;\n  \n  // Related entities (populated via joins)\n  user?: {\n    id: number;\n    name: string;\n    email: string;\n    phone?: string;\n  };\n  doctor?: Doctor;\n  \n  // Smart scheduling fields\n  priority_score?: number;\n  conflict_resolution?: string;\n  auto_scheduled?: boolean;\n}\n\n// Appointment list API response\nexport interface AppointmentListResponse extends ApiResponse<Appointment[]> {\n  appointments: Appointment[];\n  total: number;\n}\n\n// Cancellation request payload\nexport interface CancellationRequest {\n  reason?: string;\n}\n\n// API Configuration\nexport const API_BASE_URL = process.env.REACT_APP_API_BASE_URL || 'http://localhost:8080/api/v1';"],"mappings":"AAAA;;AAWA;;AA6BA;;AAOA;AACA,OAAO,MAAMA,QAAQ,SAASC,KAAK,CAAC;EAClCC,WAAWA,CACTC,OAAe,EACRC,MAAc,EACdC,QAAwB,EAC/B;IACA,KAAK,CAACF,OAAO,CAAC;IAAC,KAHRC,MAAc,GAAdA,MAAc;IAAA,KACdC,QAAwB,GAAxBA,QAAwB;IAG/B,IAAI,CAACC,IAAI,GAAG,UAAU;EACxB;AACF;;AAEA;;AA8BA;;AAuCA;;AAMA;;AAKA;AACA,OAAO,MAAMC,YAAY,GAAGC,OAAO,CAACC,GAAG,CAACC,sBAAsB,IAAI,8BAA8B","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}