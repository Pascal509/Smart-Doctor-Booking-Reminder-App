{"ast":null,"code":"// API Response Types\n// Doctor and Specialty Types\n// Data for creating a new doctor\n// API Client Error Types\nexport class ApiError extends Error{constructor(message,status,response){super(message);this.status=status;this.response=response;this.name='ApiError';}}// Appointment Booking Types\n// Complete Appointment interface for appointment lists\n// Appointment list API response\n// Cancellation request payload\n// API Configuration\nexport const API_BASE_URL=process.env.REACT_APP_API_BASE_URL||'http://localhost:8080/api/v1';","map":{"version":3,"names":["ApiError","Error","constructor","message","status","response","name","API_BASE_URL","process","env","REACT_APP_API_BASE_URL"],"sources":["C:/Users/HP/Smart-Doctor-Booking-Reminder-App/frontend/src/api/types/api.ts"],"sourcesContent":["// API Response Types\nexport interface ApiResponse<T> {\n  message: string;\n  data: T;\n}\n\nexport interface ErrorResponse {\n  error: string;\n  message: string;\n}\n\n// Doctor and Specialty Types\nexport interface Specialty {\n  id: number;\n  name: string;\n  description: string;\n  is_active: boolean;\n  created_at: string;\n  updated_at: string;\n}\n\nexport interface Doctor {\n  id: number;\n  name: string;\n  specialty_id: number;\n  is_active: boolean;\n  created_at: string;\n  updated_at: string;\n  specialty?: Specialty;\n}\n\n// Data for creating a new doctor\nexport interface DoctorData {\n  name: string;\n  specialty_id: number;\n  is_active?: boolean; // Optional, defaults to true\n}\n\n// API Client Error Types\nexport class ApiError extends Error {\n  constructor(\n    message: string,\n    public status: number,\n    public response?: ErrorResponse\n  ) {\n    super(message);\n    this.name = 'ApiError';\n  }\n}\n\n// Appointment Booking Types\nexport interface BookingData {\n  doctor_id: number;\n  patient_id: number;\n  appointment_time: string; // ISO 8601 format\n  notes?: string;\n}\n\nexport interface BookingResponse {\n  appointment_id: number;\n  doctor_id: number;\n  patient_id: number;\n  appointment_time: string;\n  status: string;\n  notes?: string;\n  created_at: string;\n  message: string;\n}\n\nexport interface AppointmentStatus {\n  id: number;\n  status: 'scheduled' | 'confirmed' | 'cancelled' | 'completed';\n  appointment_time: string;\n  doctor_name?: string;\n  patient_name?: string;\n}\n\n// Complete Appointment interface for appointment lists\nexport interface Appointment {\n  id: number;\n  user_id: number;\n  doctor_id: number;\n  appointment_time: string;\n  duration: number;\n  status: 'SCHEDULED' | 'CONFIRMED' | 'CANCELLED' | 'COMPLETED' | 'scheduled' | 'confirmed' | 'cancelled' | 'completed';\n  notes?: string;\n  cancellation_reason?: string;\n  created_at: string;\n  updated_at: string;\n  \n  // Related entities (populated via joins)\n  user?: {\n    id: number;\n    name: string;\n    email: string;\n    phone?: string;\n  };\n  doctor?: Doctor;\n  \n  // Smart scheduling fields\n  priority_score?: number;\n  conflict_resolution?: string;\n  auto_scheduled?: boolean;\n  reminder_sent?: boolean;\n}\n\n// Appointment list API response\nexport interface AppointmentListResponse extends ApiResponse<Appointment[]> {\n  appointments: Appointment[];\n  total: number;\n}\n\n// Cancellation request payload\nexport interface CancellationRequest {\n  reason?: string;\n}\n\n// API Configuration\nexport const API_BASE_URL = process.env.REACT_APP_API_BASE_URL || 'http://localhost:8080/api/v1';"],"mappings":"AAAA;AAWA;AAoBA;AAOA;AACA,MAAO,MAAM,CAAAA,QAAQ,QAAS,CAAAC,KAAM,CAClCC,WAAWA,CACTC,OAAe,CACRC,MAAc,CACdC,QAAwB,CAC/B,CACA,KAAK,CAACF,OAAO,CAAC,CAAC,KAHRC,MAAc,CAAdA,MAAc,MACdC,QAAwB,CAAxBA,QAAwB,CAG/B,IAAI,CAACC,IAAI,CAAG,UAAU,CACxB,CACF,CAEA;AA2BA;AA6BA;AAMA;AAKA;AACA,MAAO,MAAM,CAAAC,YAAY,CAAGC,OAAO,CAACC,GAAG,CAACC,sBAAsB,EAAI,8BAA8B","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}